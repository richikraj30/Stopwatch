{"ast":null,"code":"var _jsxFileName = \"E:\\\\Development\\\\Stopwatch\\\\Stopwatch\\\\src\\\\components\\\\Stopwatch\\\\Stopwatch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mystyle = {\n  border: \"none\",\n  display: \"inline-block\",\n  margin: \"5px 3px\",\n  fontSize: \"20px\"\n};\nconst Stopwatch = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const startTimer = () => {\n    setIsRunning(true);\n    setStartTime(Date.now() - timeElapsed);\n  };\n  const pauseTimer = () => {\n    setIsRunning(false);\n  };\n  const resumeTimer = () => {\n    setIsRunning(true);\n    setStartTime(Date.now() - timeElapsed);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setStartTime(null);\n    setTimeElapsed(0);\n  };\n  useEffect(() => {\n    let timerId;\n    if (isRunning) {\n      timerId = setInterval(() => {\n        setTimeElapsed(Date.now() - startTime);\n      }, 10);\n    }\n    return () => clearInterval(timerId);\n  }, [isRunning, startTime]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000 % 60);\n    const milliseconds = Math.floor(time % 1000 / 10);\n    return `${minutes.toString().padStart(2, '0')}:\n        ${seconds.toString().padStart(2, '0')}:\n        ${milliseconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"300px\",\n      width: \"300px\",\n      border: \"2px solid blue\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"time\",\n      id: \"time\",\n      children: formatTime(timeElapsed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), isRunning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"pause\",\n        id: \"pause\",\n        onClick: pauseTimer,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"reset\",\n        id: \"reset\",\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : timeElapsed === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"start\",\n        id: \"start\",\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"reset\",\n        id: \"reset\",\n        onClick: resetTimer,\n        disabled: true,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"resume\",\n        id: \"resume\",\n        onClick: resumeTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: mystyle,\n        \"data-testid\": \"reset\",\n        id: \"reset\",\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }, this);\n};\n_s(Stopwatch, \"eNc5pVS994Jo86ChhXBgmf4A+xk=\");\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","mystyle","border","display","margin","fontSize","Stopwatch","_s","isRunning","setIsRunning","startTime","setStartTime","timeElapsed","setTimeElapsed","startTimer","Date","now","pauseTimer","resumeTimer","resetTimer","timerId","setInterval","clearInterval","formatTime","time","minutes","Math","floor","seconds","milliseconds","toString","padStart","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Development/Stopwatch/Stopwatch/src/components/Stopwatch/Stopwatch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst mystyle = {\r\n        border: \"none\",\r\n        display: \"inline-block\",\r\n        margin: \"5px 3px\",\r\n        fontSize: \"20px\"\r\n      }\r\n\r\nconst Stopwatch = () => {\r\nconst [isRunning, setIsRunning] = useState(false);\r\nconst [startTime, setStartTime] = useState(null);\r\nconst [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\nconst startTimer = () => {\r\nsetIsRunning(true);\r\nsetStartTime(Date.now() - timeElapsed);\r\n};\r\n\r\nconst pauseTimer = () => {\r\nsetIsRunning(false);\r\n};\r\n\r\nconst resumeTimer = () => {\r\nsetIsRunning(true);\r\nsetStartTime(Date.now() - timeElapsed);\r\n};\r\n\r\nconst resetTimer = () => {\r\nsetIsRunning(false);\r\nsetStartTime(null);\r\nsetTimeElapsed(0);\r\n};\r\n\r\nuseEffect(() => {\r\nlet timerId;\r\n\r\nif (isRunning) {\r\n    timerId = setInterval(() => {\r\n    setTimeElapsed(Date.now() - startTime);\r\n    }, 10);\r\n}\r\n\r\nreturn () => clearInterval(timerId);\r\n}, [isRunning, startTime]);\r\n\r\nconst formatTime = (time) => {\r\nconst minutes = Math.floor(time / 60000);\r\nconst seconds = Math.floor((time / 1000) % 60);\r\nconst milliseconds = Math.floor((time % 1000) / 10);\r\n\r\nreturn `${minutes.toString().padStart(2, '0')}:\r\n        ${seconds.toString().padStart(2, '0')}:\r\n        ${milliseconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\nreturn (\r\n<div style = {{height:\"300px\",width:\"300px\",border:\"2px solid blue\",margin:\"auto\"}}>\r\n    <h1>React Stopwatch</h1>\r\n    <p data-testid=\"time\" id = \"time\">{formatTime(timeElapsed)}</p>\r\n\r\n    {isRunning ? (\r\n    <>\r\n        <button style={mystyle} data-testid=\"pause\" id=\"pause\" onClick={pauseTimer}>\r\n        Pause\r\n        </button>\r\n        <button style={mystyle} data-testid=\"reset\" id = \"reset\" onClick={resetTimer}>\r\n        Reset\r\n        </button>\r\n    </>\r\n    ) : timeElapsed === 0 ? (\r\n    <>  \r\n        <button style={mystyle} data-testid=\"start\" id = \"start\" onClick={startTimer}>\r\n        Start\r\n        </button>\r\n        <button style={mystyle} data-testid=\"reset\" id = \"reset\" onClick={resetTimer} disabled>\r\n        Reset\r\n        </button>\r\n    </>\r\n    ) : (\r\n    <>\r\n        <button style={mystyle} data-testid=\"resume\" id = \"resume\" onClick={resumeTimer}>\r\n        Resume\r\n        </button>\r\n        <button style={mystyle} data-testid=\"reset\" id=\"reset\" onClick={resetTimer}>\r\n        Reset\r\n        </button>\r\n    </>\r\n    )}\r\n</div>\r\n);\r\n};\r\n\r\nexport default Stopwatch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}